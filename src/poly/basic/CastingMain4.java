package poly.basic;

/*
다운캐스팅 자동으로 하지 않는 이유
코드에서 참조 변수를 선언하고 초기화를 동시에 하더라도, 실제 동작을 기준으로 보면 컴파일 타임에는 참조 변수의 선언만 처리되고, 초기화는 런타임에 이루어짐.
참조변수의 타입은 컴파일 타임에 정해지고, 이를 바탕으로 받을 수 있는 객체 타입이 정해짐.
이는 다형성을 위한 것으로, 런타임에 자유롭게 다양한 타입의 객체를 받을 수 있도록 한 것.
컴파일러는 초기화하는 객체가 참조 변수의 타입으로 캐스팅 가능한지를 확인하는 데까지 책임진다.
컴파일러는 초기화 시점에서 발생할 수 있는 오류를 방지하기 위해 타입 검사를 수행하지만, 객체의 실제 생성과 관련된 작업은 런타임에 이루어짐.
 */
public class CastingMain4 {
    public static void main(String[] args) {

        Parent parent1 = new Child();
        Child child1 = (Child) parent1;
        child1.childMethod(); // 문제 없음

        Parent parent2 = new Parent();
        /*
         컴파일 시 참조변수의 타입만 확인하기 때문에, 컴파일 오류는 발생하지 않음. 다운캐스팅임.
         참조변수는 런타임이 되어야 받을 객체가 정해지기 때문에, 런타임에 해당 참조변수에 어떤 객체가 들어가 있을 지 알 수 없음.
         아래 코드가 런타임에 실행되는 순간에 와서야, parent2 변수에 실제로 어떤 객체가 들어있는 지를 알게 되고, 그때서야 JVM의 검증에 의해 런타임 오류가 발생함.
         */
        Child child2 = (Child) parent2;
        child2.childMethod();

    }
}
